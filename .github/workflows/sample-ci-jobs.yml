name: sample-ci-jobs

on:
  push:
    branches: [ jobs ]

jobs:
  get-aws-password:
    runs-on: self-hosted
    outputs:
      ecr_pwd: ${{ steps.step1.outputs.ecr_pwd }}
    steps:
      - id: step1
        run: |
          ECR_PWD=`aws ecr get-login-password --region us-east-1` 
          echo "::set-output name=ecr_pwd::$ECR_PWD"

  build:
    runs-on: self-hosted
    needs: get-aws-password
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('./pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        working-directory: .
        run: mvn clean install

  docker_build:
    runs-on: self-hosted
    needs: [build,get-aws-password]
    container:
      image: 475383224204.dkr.ecr.us-east-1.amazonaws.com/step-image-docker-build:latest
      credentials:
        username: AWS
        password: ${{ needs.get-aws-password.outputs.ecr_pwd }}
      env:
        REGISTRY_URL: ${{ secrets.AWS_ECR_REGISTRY }}
        REPOSITORY_NAME: sample-jobs
        IMAGE_TAG: v1
        DOCKERFILE_PATH: .
    steps:
      - name: Build docker image
        run: sh /orange-init.sh

  docker_push:
    runs-on: self-hosted
    needs: [docker_build,get-aws-password]
    container:
      image: 475383224204.dkr.ecr.us-east-1.amazonaws.com/step-image-docker-push:latest
      credentials:
        username: AWS
        password: ${{ needs.get-aws-password.outputs.ecr_pwd }}
      env:
        REGISTRY_URL: ${{ secrets.AWS_ECR_REGISTRY }}
        REGISTRY_USERNAME: ${{ secrets.AWS_ECR_REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.AWS_ECR_REGISTRY_PASSWORD }}
        REPOSITORY_NAME: sample-jobs
        IMAGE_TAG: v1
    steps:
      - name: Publish docker image
        run: sh /orange-init.sh